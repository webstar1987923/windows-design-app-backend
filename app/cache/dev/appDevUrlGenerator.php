<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_backup' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\BackupController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/backup/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_backup_process' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\BackupController::backupProcessAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/backup/process',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_backup_settings' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\BackupController::backupSettingsAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/backup/settings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\DashboardController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_files' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\FilesController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/files/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_files_delete' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\FilesController::deleteAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    2 =>     array (      0 => 'text',      1 => '/admin/files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_files_link_to_user' => array (  0 =>   array (    0 => 'user_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\FilesController::linkFilesToUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user_id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/files/link_user_files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_files_link_to_project' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\FilesController::linkFilesToProjectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/files/link_project_files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_files_clear_temp' => array (  0 =>   array (  ),  1 =>   array (    'keep_age' => 600,    '_controller' => 'AppBundle\\Controller\\Admin\\FilesController::clearTempAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/files/temp/clear',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_files_delete_temp' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\FilesController::deleteTempFile',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    2 =>     array (      0 => 'text',      1 => '/admin/files/temp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_files_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\FilesController::createAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/files/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\IndexController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_projects' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/projects/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_projects_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectController::createAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/projects/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_projects_create_handler' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectController::createHandlerAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/projects/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_projects_clone' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectController::cloneAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clone',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_projects_clone_handler' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectController::cloneHandlerAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/projects/clone',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_projects_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectController::updateAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_projects_update_handler' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectController::updateHandlerAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_projects_delete_confirm' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectController::deleteConfirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/deleteconfirm',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_projects_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectController::deleteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_project_files' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectFileController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/files/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_project_files_create' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectFileController::createAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/files/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_project_files_delete' => array (  0 =>   array (    0 => 'project_id',    1 => 'uuid',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\ProjectFileController::deleteAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    2 =>     array (      0 => 'text',      1 => '/files',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    4 =>     array (      0 => 'text',      1 => '/admin/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_security_token' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\SecurityController::generateToken',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/security/token',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_settings' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\SettingsController::editAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/settings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_settings_thumbnails' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\SettingsController::thumbnailsAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/settings/thumbnails',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_users_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserController::createAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_users_create_handler' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserController::createHandlerAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_users_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserController::deleteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_users_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserController::updateAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_users_update_handler' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserController::updateHandlerAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_users_toggle_lock' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserController::toggleLockAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/togglelock',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_users_toggle_enable' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserController::toggleEnableAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/toggleenable',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_users_change_password' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/change_password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_users_change_password_handler' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserController::changePasswordHandlerAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/change_password',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_user_files' => array (  0 =>   array (    0 => 'user_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Admin\\UserFileController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/files/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user_id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Frontend\\IndexController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_dictionaries_full' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryController::getDictionariesFulltreeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/dictionaries/full-tree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'app_rest_users_postregister' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\UsersController::postRegisterAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_projects' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectsController::removeProjectsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_projects' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectsController::getProjectsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_project' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectsController::getProjectAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_projects' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectsController::postProjectsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_project' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectsController::putProjectAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_project_files' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectsController::putProjectFilesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/files',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_projects' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectsController::deleteProjectsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_projects_files' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectFilesController::getFilesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/files',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_reorder_units' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectUnitsController::reorderAction',    '_format' => 'json',  ),  2 =>   array (    'project_id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reorder_units',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'project_reorder_accessories' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectAccessoriesController::reorderAction',    '_format' => 'json',  ),  2 =>   array (    'project_id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reorder_accessories',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'filling_types_reorder' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FillingTypesController::reorderAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/reorder_fillingtypes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'profile_reorder' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProfilesController::reorderAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/reorder_profiles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_projects_units' => array (  0 =>   array (    0 => 'project_id',    1 => 'unit_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectUnitsController::removeUnitsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'unit_id',    ),    2 =>     array (      0 => 'text',      1 => '/units',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    4 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_projects_units' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectUnitsController::getUnitsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/units',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_projects_unit' => array (  0 =>   array (    0 => 'project_id',    1 => 'unit_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectUnitsController::getUnitAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'unit_id',    ),    1 =>     array (      0 => 'text',      1 => '/units',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    3 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_projects_units' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectUnitsController::postUnitsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/units',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_projects_unit' => array (  0 =>   array (    0 => 'project_id',    1 => 'unit_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectUnitsController::putUnitAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'unit_id',    ),    1 =>     array (      0 => 'text',      1 => '/units',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    3 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_projects_units' => array (  0 =>   array (    0 => 'project_id',    1 => 'unit_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectUnitsController::deleteUnitsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'unit_id',    ),    1 =>     array (      0 => 'text',      1 => '/units',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    3 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_projects_unit_options' => array (  0 =>   array (    0 => 'project_id',    1 => 'unit_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectUnitsController::postUnitOptionsAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/options',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'unit_id',    ),    2 =>     array (      0 => 'text',      1 => '/units',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    4 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_projects_accessories' => array (  0 =>   array (    0 => 'project_id',    1 => 'accessory_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectAccessoriesController::removeAccessoriesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'accessory_id',    ),    2 =>     array (      0 => 'text',      1 => '/accessories',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    4 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reorder_projects' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectAccessoriesController::reorderAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reorder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_projects_accessories' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectAccessoriesController::getAccessoriesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/accessories',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_projects_accessory' => array (  0 =>   array (    0 => 'project_id',    1 => 'accessory_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectAccessoriesController::getAccessoryAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'accessory_id',    ),    1 =>     array (      0 => 'text',      1 => '/accessories',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    3 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_projects_accessories' => array (  0 =>   array (    0 => 'project_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectAccessoriesController::postAccessoriesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/accessories',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_projects_accessory' => array (  0 =>   array (    0 => 'project_id',    1 => 'accessory_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectAccessoriesController::putAccessoryAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'accessory_id',    ),    1 =>     array (      0 => 'text',      1 => '/accessories',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    3 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_projects_accessories' => array (  0 =>   array (    0 => 'project_id',    1 => 'accessory_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProjectAccessoriesController::deleteAccessoriesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'accessory_id',    ),    1 =>     array (      0 => 'text',      1 => '/accessories',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'project_id',    ),    3 =>     array (      0 => 'text',      1 => '/api/projects',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_profiles' => array (  0 =>   array (    0 => 'profile_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProfilesController::removeProfilesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'profile_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/profiles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_profiles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProfilesController::getProfilesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profiles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_profile' => array (  0 =>   array (    0 => 'profile_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProfilesController::getProfileAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'profile_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/profiles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_profiles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProfilesController::postProfilesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/profiles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_profile' => array (  0 =>   array (    0 => 'profile_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProfilesController::putProfileAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'profile_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/profiles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_profiles' => array (  0 =>   array (    0 => 'profile_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\ProfilesController::deleteProfilesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'profile_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/profiles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dictionary_reorder' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryController::reorderAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/reorder_dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_dictionary' => array (  0 =>   array (    0 => 'dictionary_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryController::removeDictionaryAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_dictionaries' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryController::postDictionariesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_dictionary' => array (  0 =>   array (    0 => 'dictionary_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryController::putDictionaryAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_dictionaries' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryController::getDictionariesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_dictionaries_fulltree' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryController::getDictionariesFulltreeAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/dictionaries/fulltree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_dictionary' => array (  0 =>   array (    0 => 'dictionary_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryController::getDictionaryAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_dictionary' => array (  0 =>   array (    0 => 'dictionary_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryController::deleteDictionaryAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dictionary_reorder_entries' => array (  0 =>   array (    0 => 'dictionary_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryEntryController::reorderAction',    '_format' => 'json',  ),  2 =>   array (    'project_id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reorder_entries',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reorder_dictionary' => array (  0 =>   array (    0 => 'dictionary_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryEntryController::reorderAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reorder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_dictionary_entries' => array (  0 =>   array (    0 => 'dictionary_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryEntryController::getEntriesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entries',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_dictionary_entry' => array (  0 =>   array (    0 => 'dictionary_id',    1 => 'entry_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryEntryController::getEntryAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'entry_id',    ),    1 =>     array (      0 => 'text',      1 => '/entries',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    3 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_dictionary_entries' => array (  0 =>   array (    0 => 'dictionary_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryEntryController::postEntriesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entries',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_dictionary_entry' => array (  0 =>   array (    0 => 'dictionary_id',    1 => 'entry_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryEntryController::putEntryAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'entry_id',    ),    1 =>     array (      0 => 'text',      1 => '/entries',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    3 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_dictionary_entry' => array (  0 =>   array (    0 => 'dictionary_id',    1 => 'entry_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\DictionaryEntryController::deleteEntryAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'entry_id',    ),    1 =>     array (      0 => 'text',      1 => '/entries',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dictionary_id',    ),    3 =>     array (      0 => 'text',      1 => '/api/dictionaries',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_fillingtypes' => array (  0 =>   array (    0 => 'filling_type_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FillingTypesController::removeFillingtypesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'filling_type_id',    ),    2 =>     array (      0 => 'text',      1 => '/api/fillingtypes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reorder' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FillingTypesController::reorderAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/reorder',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_fillingtypes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FillingTypesController::getFillingtypesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/fillingtypes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_fillingtype' => array (  0 =>   array (    0 => 'filling_type_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FillingTypesController::getFillingtypeAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'filling_type_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/fillingtypes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_fillingtypes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FillingTypesController::postFillingtypesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/fillingtypes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_fillingtype' => array (  0 =>   array (    0 => 'filling_type_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FillingTypesController::putFillingtypeAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'filling_type_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/fillingtypes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_fillingtypes' => array (  0 =>   array (    0 => 'filling_type_id',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FillingTypesController::deleteFillingtypesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'filling_type_id',    ),    1 =>     array (      0 => 'text',      1 => '/api/fillingtypes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_users_current' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\UsersController::getUsersCurrentAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/users/current',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\UsersController::postRegisterAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'remove_files' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FilesController::removeFilesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    2 =>     array (      0 => 'text',      1 => '/api/files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_files' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FilesController::getFilesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_file' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FilesController::getFileAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    1 =>     array (      0 => 'text',      1 => '/api/files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'put_file' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FilesController::putFileAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    1 =>     array (      0 => 'text',      1 => '/api/files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_files' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FilesController::deleteFilesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    1 =>     array (      0 => 'text',      1 => '/api/files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_files' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FilesController::postFilesAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'post_files_handler' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FilesController::postFilesHandlerAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/files/handlers',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_files_download' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FilesController::getFilesDownloadAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/download',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    2 =>     array (      0 => 'text',      1 => '/api/files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_files_thumbnail' => array (  0 =>   array (    0 => 'uuid',  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\Rest\\FilesController::getFilesThumbnailAction',    '_format' => 'json',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/thumbnail',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'uuid',    ),    2 =>     array (      0 => 'text',      1 => '/api/files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pdf_tools_split_n_merge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PdfController::splitAndMergeAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/pdf/splitmerge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pdf_tools_extract_table' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\PdfController::extractTableAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/pdf/exctracttable',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'nelmio_api_doc_index' => array (  0 =>   array (    0 => 'view',  ),  1 =>   array (    '_controller' => 'Nelmio\\ApiDocBundle\\Controller\\ApiDocController::indexAction',    'view' => 'default',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'view',    ),    1 =>     array (      0 => 'text',      1 => '/doc',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
